@using Microsoft.AspNetCore.Identity
@using TuLote.Entidades
@model IEnumerable<TuLote.Entidades.DTOs.LoteDTO>

    @{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@{
    var message = ViewBag.SuccessMsg;
}

<h1 class="text-warning text-center">Lista de lotes</h1>


<!-- Validacion para desplegar Mensaje despues del POST-->
@if (TempData["success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show col-md-4 text-center" role="alert">
        @Html.Encode(TempData["success"])
    </div>
}
<div class="col-md-3 form-group d-grid mb-3">
    <a asp-action="Crear" class="btn btn-success col-12 fw-bolder mb-3 fs-6"><i class="fa-solid fa-house"></i>&nbsp&nbspCrear lote</a>
</div>
<div class="col-md-9 mb-2 ">

    <div class="">
    </div>
    <table border="0" cellspacing="5" cellpadding="5">
        <tbody>
            <tr class="col-md-10">
                @* <td class="text-warning fw-bold col-1">Precio mínimo</td>*@
                <td><input type="text" class="form-control col-md-12 input-lg rounded-3 text-center" placeholder="Valor desde" id="min" name="min"></td>

                @*<td class="text-warning fw-bold col-1">Precio hasta</td>*@
                <td><input class="form-control input-lg col-md-12 rounded-3 text-center" placeholder="Valor hasta" type="text" id="max" name="max"></td>


                @*<td class="text-warning fw-bold col-1">Metros desde</td>*@
                <td><input class="form-control input-lg col-md-12 rounded-3 text-center" placeholder="Mts desde" type="text" id="metros" name="max"></td>
            </tr>
        </tbody>
    </table>
</div>
@if (Model.Count() > 0)
{

    <div style="overflow-x:auto;">

        <div class="mb-4 ">

            <div class="table login-row">

                <div class="">

                    <table class="table table-dark table-striped table-bordered col-lg-6 display" id="tabla">
                        <thead>
                            <tr class="col-md-12">
                                <th scope="col" class="col-md-1 text-warning fw-bolder text-center"> Localidad</th>
                                <th scope="col" class="col-md-1 text-warning fw-bolder text-center">Barrio</th>
                                <th scope="col" class="col-md-1 text-warning fw-bolder text-center">Lote</th>
                                <th scope="col" class="col-md-1 text-warning fw-bolder text-center">Metros cuadrados</th>
                                <th scope="col" class="col-md-1 text-warning fw-bolder text-center">Tipo</th>
                                <th scope="col" class="col-md-1 text-warning fw-bolder text-center">Orientación</th>
                                <th scope="col" class="col-md-1 text-warning fw-bolder text-center">Precio</th>
                                <th scope="col" class="col-md-1 text-warning fw-bolder text-center">Disponible</th>
                                <th scope="col" class="col-md-1 text-warning fw-bolder text-center">Fecha Alta</th>
                                <th scope="col" class="col-md-1 text-warning fw-bolder text-center">Agente</th>
                                <th scope="col" class="col-md-2 text-warning fw-bolder text-center">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr class="col-md-6 text-center">
                                    <td scope="col">@item.Barrio.Localidad.Nombre</td>
                                    <td class="text-success" scope="col">@item.Barrio.Nombre</td>
                                    <td class="text-secondary" scope="col">@item.Numero</td>
                                    <td scope="col">@item.Metros</td>
                                    <td scope="col">@item.Tipo</td>
                                    <td class="" scope="col">@item.Orientacion</td>
                                    <td class="text-secondary" scope="col">@item.Precio</td>
                                    @if (item.Disponible == true)
                                    {
                                        <td scope="col"><i class="fa-solid fa-square-check fs-3 text-success"></i></td>
                                    }
                                    else
                                    {
                                        <td scope="col"><i class="fa-solid fa-gavel alert-danger fs-3"></i></td>
                                    }

                                    <td scope="col">@item.FechaCreacion.ToString("dd/MM/yy")</td>
                                    <td class="text-secondary" scope="col">@item.Usuario.Alias</td>
                                    @if (item.Usuario.Email == @User.Identity.Name)
                                    {
                                        <td scope="col">
                                            <a asp-action="Edit" asp-route-id="@item.Id"><i class="fa-solid fa-pencil text-success fs-6"></i></a> |
                                            <a asp-action="Details" asp-route-id="@item.Id"><i class="fa-solid fa-paperclip text-primary fs-6 "></i></a> |
                                            <a asp-action="Delete" asp-route-id="@item.Id"><i class="fa-regular fa-trash-can text-danger fs-6"></i></a>
                                        </td>
                                    }
                                    else
                                    {
                                        <td scope="col">
                                            <a asp-action="Details" asp-route-id="@item.Id"><i class="fa-solid fa-paperclip text-success "></i></a>
                                        </td>
                                    }

                                </tr>
                            }
                        </tbody>


                    </table>
                </div>
            </div>
        </div>
    </div>
}
else
{

    <div class="col-md-3 form-group d-grid">
        <a asp-action="Crear" class="btn btn-success col-12 fw-bolder mb-3 fs-6"><i class="fa-solid fa-house"></i>&nbsp&nbspCrear lote</a>
    </div>

    <p class="text--white">No hay lotes para mostrar</p>
}


@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }



<script src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.3/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.4.1/js/buttons.flash.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.print.min.js"></script>


<script type="text/javascript">

        $(document).ready(function() {
        $('#tabla').DataTable({

            language: {
                    "lengthMenu": "Mostrar _MENU_ registros",
                    "zeroRecords": "No se encontraron resultados",
                    "info": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "infoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "infoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sSearch": "Buscar: ",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast":"Último",
                        "sNext":" Siguiente",
                        "sPrevious": "Anterior "
                     },
                     "sProcessing":"Procesando...",
                },
            //para usar los botones
            responsive: "true",
            dom: 'Bfrtilp',
            buttons:[
                {
                    extend:    'excelHtml5',
                    exportOptions: {
                    columns: [ 0, 1, 2, 3,4,5,6]
                },
                    text:      '<i class="fas fa-file-excel"></i> ',
                    filename: 'Lotes_Candaosa_Prop',
                    titleAttr: 'Exportar a Excel',
                    className: 'btn btn-success',
                    title:"Lista de lotes - Candaosa Propiedades"
                },
                {
                    extend:    'pdfHtml5',
                    exportOptions: {
                    columns: [ 0, 1, 2, 3,4,5,6]
                },
                    text:      '<i class="fas fa-file-pdf"></i> ',
                    filename: 'Lotes_Candaosa_Prop',
                     orientation: 'landscape', //portrait
                    pageSize: 'A4', //A3 , A5 , A6 , legal , letter
                    titleAttr: 'Exportar a PDF',
                    className: 'btn btn-danger',
                     title: "Lista de lotes -- Candaosa Propiedades | info@candaosaprop.com"
                },
                {

                    extend:    'print',
                    exportOptions: {
                    columns: [0, 1, 2, 3,4,5,6]
                },
                    text:      '<i class="fa fa-print"></i> ',
                     filename: 'Lotes_Candaosa_Prop',
                    titleAttr: 'Imprimir',
                    className: 'btn btn-info',
                    title:"Lista de lotes - Candaosa Propiedades"
                },
            ],

        });
    });


                // bisqueda por precios minimos y maximos
                   $.fn.dataTable.ext.search.push(
                       function( settings, data, dataIndex ) {
                           var min = $('#min').val() * 1;
                           var max = $('#max').val() * 1;
                           var precio = parseFloat( data[6] ) || 0; // use data for the age column
                           if ( ( min == '' && max == '' ) ||
                                ( min == '' && precio <= max ) ||
                                ( min <= precio && '' == max ) ||
                                ( min <= precio && precio <= max ) )
                           {
                               return true;
                           }
                           return false;
                       }
                   );
                   $(document).ready(function() {
                       var table = $('#tabla').DataTable();
                       // Event listener to the two range filtering inputs to redraw on input
                       $('#min, #max').keyup( function() {
                           table.draw();
                       } );
                   } );


                   //busqueda por cantidad de metros
                    $.fn.dataTable.ext.search.push(
                       function( settings, data, dataIndex ) {
                           var metrosdesde = $('#metros').val() * 1;

                           var metro = parseFloat( data[3] ) || 0; // use data for the age column
                           if ( ( metrosdesde == '' ) ||
                                ( metrosdesde <= metro && '' == metro ) ||
                                ( metrosdesde <= metro) )
                           {
                               return true;
                           }
                           return false;
                       }
                   );
                   $(document).ready(function() {
                       var table = $('#tabla').DataTable();
                       // Event listener to the two range filtering inputs to redraw on input
                       $('#metros').keyup( function() {
                           table.draw();
                       } );
                   } );
</script>

 }



